package main

import "strconv"

func isItemDefaultSelected(item Ranking, me string) string {
	if strconv.Itoa(item.Id) == me {
		return "selected"
	}

	return "false"
}

templ page(options []Ranking, previousResult int, me string, tournamentOptions []TournamentOption, selectedTournament *string, hasResults bool) {
	<body>
		<div>
			if hasResults {
				<p>
					Previous result: {strconv.Itoa(previousResult)} points
				</p>
			}
			<form id="form">
				<label for="me-select">Me: </label>
				<input id="me-select" form="form" name="me" list="me-options" value={me}>
				<datalist id="me-options">
				for _, item := range options {
					<option value={parseName(item.Name)}></option>
				}
				</datalist>
				<label for="tournament-select">Tournament: </label>
				<select id="tournament-select" form="form" name="tournament">
				for _, tournament := range tournamentOptions {
					<option value={tournament.Id} if tournament.Id == *selectedTournament {
						selected
					} >{ tournament.Name }</option>
				}
				</select>
				<fieldset id="formFields">
				<legend>
					Opponents
				</legend>
				@opponent(options)
				</fieldset>
				<button id="add-opponent-button">
					Add Opponent
				</button>
				<button type="submit">
					Submit
				</button>
			</form>
		</div>
	</body>
	<style>
		body {
			display: grid;
			place-items: center;
		}
	</style>
	<script type="text/javascript">
		document.getElementById("add-opponent-button").addEventListener("click",
			function(event) {
				event.preventDefault();
				addOpponent();
			}
		);
		
		function addOpponent() {
			const lastOpponent = document.getElementById("formFields").lastChild;
			const clonedOpponent = lastOpponent.cloneNode(true);
			const formFields = document.getElementById("formFields")
			formFields.appendChild(clonedOpponent);
			
			const key = document.getElementById("formFields").children.length - 1;
			const clonedElementInDom = document.getElementById("formFields").lastChild;
			
			const checkbox = clonedElementInDom.querySelector("input[type=\"checkbox\"]");
			checkbox.name = "win" + key;
			checkbox.id = "win" + key;
			checkbox.checked = true;

			clonedElementInDom.querySelector("label").for = "win" + key;

			const input = clonedElementInDom.querySelector("input[type=\"text\"]");
			input.name = "opponent" + key;
			input.id = "opponent-select" + key;
			input.value = "";
		}
	</script>
}

templ dropdown(items []Ranking) {
	<input id="opponent-select0" list="opponent-choices" name="opponent0" form="form" type="text" />
	<datalist id="opponent-choices">
	for _, item := range items {
			<option value={parseName(item.Name)}></option>
	}	
	</datalist>
}

templ opponent(options []Ranking) {
	<div id="opponent">
		@dropdown(options)
		<input type="checkbox" name="win0" id="win0" checked />
		<label for="win0">Win?</label>
	</div>
}
